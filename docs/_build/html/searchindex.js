Search.setIndex({"alltitles": {"API": [[17, "api"]], "Additional transformers for discretisation": [[7, "additional-transformers-for-discretisation"]], "ArbitraryDiscretiser": [[2, null]], "Categorical Encoding": [[16, null]], "CountFrequencyEncoder": [[8, null]], "Datasets": [[0, null], [17, "datasets"]], "DecisionTreeDiscretiser": [[3, null]], "DecisionTreeEncoder": [[9, null]], "Discretisation": [[7, null]], "EqualFrequencyDiscretiser": [[4, null]], "EqualWidthDiscretiser": [[5, null]], "GeometricWidthDiscretiser": [[6, null]], "MeanEncoder": [[10, null]], "OneHotEncoder": [[11, null]], "OrdinalEncoder": [[12, null]], "Other": [[17, "other"]], "Other categorical encoding libraries": [[16, "other-categorical-encoding-libraries"]], "Other wrappers": [[31, "other-wrappers"]], "RareLabelEncoder": [[13, null]], "Scikit-learn Wrapper": [[31, null]], "SklearnTransformerWrapper": [[30, null]], "StringSimilarityEncoder": [[14, null]], "Tools": [[17, "tools"]], "Transformation": [[17, "transformation"]], "Variable handling functions": [[28, null]], "WoEEncoder": [[15, null]], "check_all_variables": [[19, null]], "check_categorical_variables": [[20, null]], "check_datetime_variables": [[21, null]], "check_numerical_variables": [[22, null]], "find_all_variables": [[23, null]], "find_categorical_and_numerical_variables": [[24, null]], "find_categorical_variables": [[25, null]], "find_datetime_variables": [[26, null]], "find_numerical_variables": [[27, null]], "load__titanic": [[1, null]], "quick_feature": [[18, null]], "quick_feature documentation": [[17, null]], "retain_variables_if_in_df": [[29, null]]}, "docnames": ["datasets/index", "datasets/titanic", "discretisation/ArbitraryDiscretiser", "discretisation/DecisionTreeDiscretiser", "discretisation/EqualFrequencyDiscretiser", "discretisation/EqualWidthDiscretiser", "discretisation/GeometricWidthDiscretiser", "discretisation/index", "encoding/CountFrequencyEncoder", "encoding/DecisionTreeEncoder", "encoding/MeanEncoder", "encoding/OneHotEncoder", "encoding/OrdinalEncoder", "encoding/RareLabelEncoder", "encoding/StringSimilarityEncoder", "encoding/WoEEncoder", "encoding/index", "index", "modules", "variable_handling/check_all_variables", "variable_handling/check_categorical_variables", "variable_handling/check_datetime_variables", "variable_handling/check_numerical_variables", "variable_handling/find_all_variables", "variable_handling/find_categorical_and_numerical_variables", "variable_handling/find_categorical_variables", "variable_handling/find_datetime_variables", "variable_handling/find_numerical_variables", "variable_handling/index", "variable_handling/retain_variables_if_in_df", "wrappers/Wrapper", "wrappers/index"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1}, "filenames": ["datasets/index.rst", "datasets/titanic.rst", "discretisation/ArbitraryDiscretiser.rst", "discretisation/DecisionTreeDiscretiser.rst", "discretisation/EqualFrequencyDiscretiser.rst", "discretisation/EqualWidthDiscretiser.rst", "discretisation/GeometricWidthDiscretiser.rst", "discretisation/index.rst", "encoding/CountFrequencyEncoder.rst", "encoding/DecisionTreeEncoder.rst", "encoding/MeanEncoder.rst", "encoding/OneHotEncoder.rst", "encoding/OrdinalEncoder.rst", "encoding/RareLabelEncoder.rst", "encoding/StringSimilarityEncoder.rst", "encoding/WoEEncoder.rst", "encoding/index.rst", "index.rst", "modules.rst", "variable_handling/check_all_variables.rst", "variable_handling/check_categorical_variables.rst", "variable_handling/check_datetime_variables.rst", "variable_handling/check_numerical_variables.rst", "variable_handling/find_all_variables.rst", "variable_handling/find_categorical_and_numerical_variables.rst", "variable_handling/find_categorical_variables.rst", "variable_handling/find_datetime_variables.rst", "variable_handling/find_numerical_variables.rst", "variable_handling/index.rst", "variable_handling/retain_variables_if_in_df.rst", "wrappers/Wrapper.rst", "wrappers/index.rst"], "indexentries": {"arbitrarydiscretiser (class in quick_feature.discretisation)": [[2, "quick_feature.discretisation.ArbitraryDiscretiser", false]], "countfrequencyencoder (class in quick_feature.encoding)": [[8, "quick_feature.encoding.CountFrequencyEncoder", false]], "decisiontreediscretiser (class in quick_feature.discretisation)": [[3, "quick_feature.discretisation.DecisionTreeDiscretiser", false]], "decisiontreeencoder (class in quick_feature.encoding)": [[9, "quick_feature.encoding.DecisionTreeEncoder", false]], "equalfrequencydiscretiser (class in quick_feature.discretisation)": [[4, "quick_feature.discretisation.EqualFrequencyDiscretiser", false]], "equalwidthdiscretiser (class in quick_feature.discretisation)": [[5, "quick_feature.discretisation.EqualWidthDiscretiser", false]], "fit() (quick_feature.discretisation.arbitrarydiscretiser method)": [[2, "quick_feature.discretisation.ArbitraryDiscretiser.fit", false]], "fit() (quick_feature.discretisation.decisiontreediscretiser method)": [[3, "quick_feature.discretisation.DecisionTreeDiscretiser.fit", false]], "fit() (quick_feature.discretisation.equalfrequencydiscretiser method)": [[4, "quick_feature.discretisation.EqualFrequencyDiscretiser.fit", false]], "fit() (quick_feature.discretisation.equalwidthdiscretiser method)": [[5, "quick_feature.discretisation.EqualWidthDiscretiser.fit", false]], "fit() (quick_feature.discretisation.geometricwidthdiscretiser method)": [[6, "quick_feature.discretisation.GeometricWidthDiscretiser.fit", false]], "fit() (quick_feature.encoding.countfrequencyencoder method)": [[8, "quick_feature.encoding.CountFrequencyEncoder.fit", false]], "fit() (quick_feature.encoding.decisiontreeencoder method)": [[9, "quick_feature.encoding.DecisionTreeEncoder.fit", false]], "fit() (quick_feature.encoding.meanencoder method)": [[10, "quick_feature.encoding.MeanEncoder.fit", false]], "fit() (quick_feature.encoding.onehotencoder method)": [[11, "quick_feature.encoding.OneHotEncoder.fit", false]], "fit() (quick_feature.encoding.ordinalencoder method)": [[12, "quick_feature.encoding.OrdinalEncoder.fit", false]], "fit() (quick_feature.encoding.rarelabelencoder method)": [[13, "quick_feature.encoding.RareLabelEncoder.fit", false]], "fit() (quick_feature.encoding.stringsimilarityencoder method)": [[14, "quick_feature.encoding.StringSimilarityEncoder.fit", false]], "fit() (quick_feature.encoding.woeencoder method)": [[15, "quick_feature.encoding.WoEEncoder.fit", false]], "geometricwidthdiscretiser (class in quick_feature.discretisation)": [[6, "quick_feature.discretisation.GeometricWidthDiscretiser", false]], "inverse_transform() (quick_feature.encoding.meanencoder method)": [[10, "quick_feature.encoding.MeanEncoder.inverse_transform", false]], "inverse_transform() (quick_feature.encoding.onehotencoder method)": [[11, "quick_feature.encoding.OneHotEncoder.inverse_transform", false]], "inverse_transform() (quick_feature.encoding.rarelabelencoder method)": [[13, "quick_feature.encoding.RareLabelEncoder.inverse_transform", false]], "inverse_transform() (quick_feature.encoding.stringsimilarityencoder method)": [[14, "quick_feature.encoding.StringSimilarityEncoder.inverse_transform", false]], "meanencoder (class in quick_feature.encoding)": [[10, "quick_feature.encoding.MeanEncoder", false]], "onehotencoder (class in quick_feature.encoding)": [[11, "quick_feature.encoding.OneHotEncoder", false]], "ordinalencoder (class in quick_feature.encoding)": [[12, "quick_feature.encoding.OrdinalEncoder", false]], "rarelabelencoder (class in quick_feature.encoding)": [[13, "quick_feature.encoding.RareLabelEncoder", false]], "stringsimilarityencoder (class in quick_feature.encoding)": [[14, "quick_feature.encoding.StringSimilarityEncoder", false]], "transform() (quick_feature.discretisation.arbitrarydiscretiser method)": [[2, "quick_feature.discretisation.ArbitraryDiscretiser.transform", false]], "transform() (quick_feature.discretisation.decisiontreediscretiser method)": [[3, "quick_feature.discretisation.DecisionTreeDiscretiser.transform", false]], "transform() (quick_feature.encoding.decisiontreeencoder method)": [[9, "quick_feature.encoding.DecisionTreeEncoder.transform", false]], "transform() (quick_feature.encoding.onehotencoder method)": [[11, "quick_feature.encoding.OneHotEncoder.transform", false]], "transform() (quick_feature.encoding.rarelabelencoder method)": [[13, "quick_feature.encoding.RareLabelEncoder.transform", false]], "transform() (quick_feature.encoding.stringsimilarityencoder method)": [[14, "quick_feature.encoding.StringSimilarityEncoder.transform", false]], "transform() (quick_feature.encoding.woeencoder method)": [[15, "quick_feature.encoding.WoEEncoder.transform", false]], "woeencoder (class in quick_feature.encoding)": [[15, "quick_feature.encoding.WoEEncoder", false]]}, "objects": {"quick_feature.discretisation": [[2, 0, 1, "", "ArbitraryDiscretiser"], [3, 0, 1, "", "DecisionTreeDiscretiser"], [4, 0, 1, "", "EqualFrequencyDiscretiser"], [5, 0, 1, "", "EqualWidthDiscretiser"], [6, 0, 1, "", "GeometricWidthDiscretiser"]], "quick_feature.discretisation.ArbitraryDiscretiser": [[2, 1, 1, "", "fit"], [2, 1, 1, "", "transform"]], "quick_feature.discretisation.DecisionTreeDiscretiser": [[3, 1, 1, "", "fit"], [3, 1, 1, "", "transform"]], "quick_feature.discretisation.EqualFrequencyDiscretiser": [[4, 1, 1, "", "fit"]], "quick_feature.discretisation.EqualWidthDiscretiser": [[5, 1, 1, "", "fit"]], "quick_feature.discretisation.GeometricWidthDiscretiser": [[6, 1, 1, "", "fit"]], "quick_feature.encoding": [[8, 0, 1, "", "CountFrequencyEncoder"], [9, 0, 1, "", "DecisionTreeEncoder"], [10, 0, 1, "", "MeanEncoder"], [11, 0, 1, "", "OneHotEncoder"], [12, 0, 1, "", "OrdinalEncoder"], [13, 0, 1, "", "RareLabelEncoder"], [14, 0, 1, "", "StringSimilarityEncoder"], [15, 0, 1, "", "WoEEncoder"]], "quick_feature.encoding.CountFrequencyEncoder": [[8, 1, 1, "", "fit"]], "quick_feature.encoding.DecisionTreeEncoder": [[9, 1, 1, "", "fit"], [9, 1, 1, "", "transform"]], "quick_feature.encoding.MeanEncoder": [[10, 1, 1, "", "fit"], [10, 1, 1, "", "inverse_transform"]], "quick_feature.encoding.OneHotEncoder": [[11, 1, 1, "", "fit"], [11, 1, 1, "", "inverse_transform"], [11, 1, 1, "", "transform"]], "quick_feature.encoding.OrdinalEncoder": [[12, 1, 1, "", "fit"]], "quick_feature.encoding.RareLabelEncoder": [[13, 1, 1, "", "fit"], [13, 1, 1, "", "inverse_transform"], [13, 1, 1, "", "transform"]], "quick_feature.encoding.StringSimilarityEncoder": [[14, 1, 1, "", "fit"], [14, 1, 1, "", "inverse_transform"], [14, 1, 1, "", "transform"]], "quick_feature.encoding.WoEEncoder": [[15, 1, 1, "", "fit"], [15, 1, 1, "", "transform"]], "quick_feature.variable_handling": [[19, 2, 1, "", "check_all_variables"], [20, 2, 1, "", "check_categorical_variables"], [21, 2, 1, "", "check_datetime_variables"], [22, 2, 1, "", "check_numerical_variables"], [23, 2, 1, "", "find_all_variables"], [24, 2, 1, "", "find_categorical_and_numerical_variables"], [25, 2, 1, "", "find_categorical_variables"], [26, 2, 1, "", "find_datetime_variables"], [27, 2, 1, "", "find_numerical_variables"], [29, 2, 1, "", "retain_variables_if_in_df"]], "quick_feature.wrappers": [[30, 0, 1, "", "SklearnTransformerWrapper"]], "quick_feature.wrappers.SklearnTransformerWrapper": [[30, 1, 1, "", "fit"], [30, 1, 1, "", "get_feature_names_out"], [30, 1, 1, "", "inverse_transform"], [30, 1, 1, "", "transform"]]}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "function", "Python function"]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:function"}, "terms": {"": [3, 6, 7, 9, 10, 12, 14, 16, 31], "0": [2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 30], "000000": [10, 14, 30], "0001": 6, "001": 6, "02": [19, 20, 21, 22, 23, 24, 25, 26, 27, 29], "03": 15, "05": 13, "090091": 3, "1": [2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30], "10": [2, 3, 4, 5, 6, 8, 13, 30], "100": [2, 3, 4, 5], "1000": 2, "11": [4, 5], "111": [4, 5], "117": [4, 5], "12": 4, "13": 5, "15": [2, 5], "150000": 9, "16": 30, "17": 2, "18": 30, "2": [2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30], "20": 2, "2001": 10, "2006": [4, 5], "2009": [3, 9, 11], "2015": [4, 5, 15], "2017": 12, "2018": 14, "2020": [14, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29], "224745": 30, "23": [3, 9, 11], "24": [19, 20, 21, 22, 23, 24, 25, 26, 27, 29], "25": [2, 8, 30], "27": 2, "287682": 15, "3": [2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30], "31": 2, "34": [3, 9, 11], "36": 30, "4": [3, 4, 5, 8, 9, 10, 11, 12, 13, 14, 15, 30], "400000": 14, "405465": 15, "42": [2, 3, 4, 5], "444444": 14, "479454": 3, "48": 3, "480769": 3, "5": [2, 3, 4, 5, 9, 10, 13, 15, 30], "50": [2, 8], "500000": 9, "507538": 10, "52": 3, "566667": 9, "6": [4, 5, 13, 14, 30], "66": 14, "666667": [9, 10, 14], "687500": 3, "7": [3, 4, 5, 6, 9, 11], "75": 2, "8": [4, 5, 10], "9": [4, 5, 30], "90": 3, "A": [4, 5, 6, 10, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29], "And": 14, "At": 0, "But": 14, "For": [2, 3, 7, 8, 9, 10, 13, 14, 15, 16, 30], "If": [2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 24, 30], "In": [3, 8, 9, 10, 11, 12, 13, 14, 15], "It": [3, 9, 11, 14, 23, 30], "No": 14, "One": 11, "That": 11, "The": [2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31], "Then": [3, 4, 5, 9], "There": [8, 12, 14, 15], "These": [3, 9, 28], "To": [8, 9, 10, 11, 12, 13, 14, 15], "With": [8, 9, 10, 11, 12, 13, 14, 15], "a_": 6, "a_i": 6, "abov": [10, 13], "accept": [8, 9, 10, 11, 12, 13, 14, 15, 16], "accomplish": 7, "accord": [9, 12], "acm": 10, "across": [3, 9], "ad": 2, "add": [15, 16, 17, 30], "add_ind": 30, "addit": [11, 16, 30], "adjust": 3, "after": [3, 9, 14], "aka": 3, "al": [3, 9, 11], "algorithm": 11, "all": [3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 23, 24, 25, 27, 28, 30], "allow": [0, 6, 8, 9, 10, 11, 12, 13, 14, 15, 30, 31], "also": [3, 8, 9, 10, 11, 12, 13, 14, 15, 16], "altern": [3, 4, 5, 8, 10, 11, 12, 13, 14, 15, 24], "amount": 6, "an": [2, 3, 8, 9, 10, 12, 13, 14, 15, 16, 28, 30], "ani": [2, 3, 9, 13, 15], "anoth": 13, "appear": 11, "appli": [3, 10, 11, 14, 30], "approxim": 4, "ar": [0, 2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 19, 20, 21, 22, 26, 28, 29], "arbeiten": [4, 5], "arbitrari": [9, 12, 16], "arbitrarili": [9, 12], "arbitrarydiscretis": 7, "argument": [4, 5, 28], "arrai": [3, 9], "articl": [3, 11], "ascend": [9, 12], "assess": 12, "assign": [12, 14], "attribut": [2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 30], "author": 9, "auto": 10, "automat": [3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15], "avail": 31, "b": [8, 9, 10, 11, 12, 13, 14, 15, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30], "back": [8, 9, 10, 12, 15, 30], "barcod": 14, "barreca": 10, "base": [11, 12], "beat": [4, 5], "been": 13, "befor": [9, 14], "behaviour": [8, 9, 10, 11, 12, 13, 14, 15], "being": 14, "below": 15, "best": 3, "between": 14, "bin": [2, 3, 4, 5, 6], "bin_numb": 3, "bin_output": 3, "binar": 30, "binari": [3, 9, 11, 14, 15], "binner_dict_": [2, 3, 4, 5, 6], "binning_dict": 2, "blend": 10, "blue": [8, 10], "book": 3, "bool": [2, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 23], "boolean": [3, 9, 11], "both": 14, "boundari": [2, 3, 4, 5, 6], "box": 14, "build": 0, "burgundi": 13, "c": [8, 10, 11, 12, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30], "calcul": [5, 6, 10, 14, 15], "call": [3, 9, 10, 13], "can": [2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 21, 23, 25, 26], "cannot": 3, "captur": 14, "cardin": [10, 14], "case": [3, 9, 11, 14, 15, 30], "cast": [8, 9, 10, 11, 12, 13, 14, 15, 25, 26], "cat": 14, "categor": [8, 9, 10, 11, 12, 13, 14, 15, 17, 20, 24, 25], "categori": [8, 9, 10, 11, 12, 13, 14, 15, 16], "category_encod": [8, 10, 12, 15], "cerda": 14, "cf": 8, "cfm": 10, "challeng": [3, 9, 11], "characterist": 16, "check": [3, 7, 8, 9, 10, 11, 12, 13, 14, 15, 19, 20, 21, 22, 28, 29, 30], "check_all_vari": 28, "check_categorical_vari": 28, "check_datetime_vari": 28, "check_numerical_vari": 28, "ciml": 3, "citat": 10, "class": [2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 30, 31], "classif": [3, 6, 9, 10, 15, 16], "classifi": [3, 9], "colour": [8, 10, 13], "columntransform": [30, 31], "com": [3, 6, 12, 15], "come": [3, 9], "comma": [3, 9], "common": 14, "compar": 14, "competit": 3, "complet": 11, "compos": 30, "comput": [4, 5], "concaten": 30, "condit": 28, "confer": [3, 9, 11], "consid": [12, 13], "constant": 6, "contain": [3, 4, 8, 9, 10, 12, 13, 14, 15, 24], "content": 17, "contigu": 4, "continu": [2, 3, 4, 5, 6, 7], "convert": [8, 9, 10, 12, 15, 30], "could": 2, "count": [8, 16], "countencod": 8, "countfrequencyencod": 16, "countfreuencyencod": 16, "creat": [9, 11, 14, 15, 30], "credit": 15, "cross": [3, 9], "cross_valid": [3, 9], "cup": [3, 9, 11], "cut": [2, 5], "cv": [3, 9], "cw": 6, "cyan": 13, "d": [10, 14], "dagger": 14, "darmstadt": [4, 5], "data": [2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 28, 30], "datafram": [2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], "dataset": [2, 3, 4, 5, 6, 8, 10, 11, 12, 13, 14, 15, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30], "date_rang": [19, 20, 21, 22, 23, 24, 25, 26, 27, 29], "datetim": [21, 23, 25, 26], "datetimetz": [21, 23], "de": [4, 5], "decim": [3, 6, 9], "decis": [3, 7, 9, 16], "decisiontreeclassifi": [3, 9], "decisiontreediscretis": [7, 9], "decisiontreeencod": 16, "decisiontreeregressor": [3, 9], "default": [2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 23, 24, 30], "defin": [6, 13, 14, 15], "demonstr": 0, "denomin": 15, "depend": 3, "describ": [10, 11], "descript": 16, "design": 9, "desir": [3, 4, 5, 6, 8, 9, 12, 28, 30], "detail": [3, 9, 15, 17], "determin": [2, 3, 5, 9, 10], "dict": [2, 3, 4, 5, 8, 9, 10, 11, 12, 13, 14, 15, 30], "dictionari": [2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15], "did": 11, "differ": [11, 14, 31], "dig": 14, "directli": 30, "dirti": 14, "dirty_cat": 14, "discret": [2, 3, 7], "discretis": [2, 3, 4, 5, 6, 9, 15, 17], "discuss": 12, "displai": [3, 9], "distanc": 14, "distribut": 6, "divid": [2, 4, 5, 6], "divis": 15, "dl": 10, "do": [2, 8, 9, 10, 12, 15], "document": [3, 9], "doe": 2, "dog": 14, "dong": [4, 5], "dong_i": [4, 5], "drop": 30, "drop_last": 11, "drop_last_binari": 11, "dtd": 3, "dte": 9, "dtype": [2, 3, 4, 5], "dummi": [11, 14, 16], "dure": [2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 30], "e": [3, 6, 10, 11, 13], "each": [3, 4, 5, 6, 8, 10, 11, 12, 13, 14, 15, 16], "easi": [4, 5], "efd": 4, "either": [3, 8, 9, 10, 11, 12, 13, 14, 15], "element": 14, "empti": 14, "en": 6, "encod": [4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 17, 30], "encoder_dict_": [8, 9, 10, 11, 12, 13, 14, 15], "encoding_method": [8, 9, 12], "encount": [8, 9, 10, 12, 15], "engin": 14, "ensembl": [3, 9, 11], "ensur": 11, "enter": [2, 8, 9, 10, 11, 12, 13, 14, 15, 30], "entir": [2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15], "equal": [4, 5, 6, 7, 15], "equalfrequencydiscretis": 7, "equalwidthdiscretis": 7, "equat": [10, 15], "equidist": 5, "error": [2, 8, 9, 10, 12, 13, 14, 15], "estim": [2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 30], "et": [3, 9, 11], "etc": 12, "evalu": [3, 9, 11], "everi": 11, "evid": [15, 16], "ewd": 5, "exact": 14, "examin": 11, "exampl": [2, 3, 4, 5, 8, 9, 10, 11, 12, 13, 14, 15, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30], "except": 30, "exclud": [23, 25], "exclude_datetim": 23, "exclus": 15, "exlcud": 23, "explor": 10, "extend": 9, "f1": 3, "factor": 10, "fals": [2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 23, 30], "fast_featur": [], "featur": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 30, 31], "feature_names_in_": [2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 30], "feature_names_out": 30, "features_to_drop_": 30, "few": 10, "fill_valu": [9, 15], "final": 3, "financi": [12, 15], "find": [3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 24, 28], "find_all_vari": 28, "find_categorical_and_numerical_vari": 28, "find_categorical_vari": 28, "find_datetime_vari": 28, "find_numerical_vari": 28, "finit": 3, "first": [4, 5, 6, 8, 10, 11, 12, 13, 15, 24], "fit": [2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 30], "fit_transform": [2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 30], "float": [9, 10, 13, 14, 15], "fold": [3, 9], "follow": [0, 2, 3, 11, 12, 30], "format": 14, "freq": [19, 20, 21, 22, 23, 24, 25, 26, 27, 29], "frequenc": [4, 8, 13, 16], "frequent": [11, 13, 14, 15], "from": [2, 3, 4, 5, 8, 9, 10, 11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30], "fulfil": 28, "full": 17, "function": [0, 7, 9, 17, 24, 26, 30, 31], "functiontransform": 30, "g": 14, "galli": 12, "gener": [3, 7, 9, 11, 14], "geometr": [6, 7], "geometric_interval_classif": 6, "geometric_progress": 6, "geometricwidthdiscretis": 7, "get": [2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 30], "get_feature_names_out": [2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 30], "get_param": [2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 30], "gi": 6, "given": [15, 24], "glossari": [3, 9], "great": 6, "greater": 6, "grei": 10, "grid": [3, 9], "group": [2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 30], "guid": [], "ha": [6, 11, 14, 23], "handl": [14, 17], "happen": [8, 10, 12, 15], "have": [8, 9, 10, 11, 12, 13, 14, 15, 16, 30], "help": 6, "here": 9, "hi": 14, "high": [10, 14], "higher": 10, "hood": 28, "hot": [11, 14], "how": 3, "html": [3, 9, 15], "http": [3, 4, 5, 6, 9, 10, 11, 12, 15], "hyperparamet": [3, 9], "i": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 28, 29, 30], "id": 10, "ident": [8, 10, 11, 12, 13, 14, 15], "identifi": [11, 14], "ieee": 14, "ignor": [2, 8, 9, 10, 11, 12, 13, 14, 15, 30], "ignore_format": [8, 9, 10, 11, 12, 13, 14, 15, 16], "implement": [8, 10, 11, 12, 13, 14, 15, 30, 31], "import": [2, 3, 4, 5, 8, 9, 10, 11, 12, 13, 14, 15, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30], "imput": 14, "includ": [8, 9, 10, 11, 12, 13, 14, 15, 30], "include_bia": 30, "increas": 6, "index": 6, "indic": [2, 3, 6, 8, 9, 10, 11, 12, 13, 14, 15], "inform": 15, "infrequ": [8, 10, 12, 13, 15, 16], "initialis": [3, 9], "input": [3, 9, 10, 11, 12, 13, 14, 15, 16, 30], "input_featur": 30, "inspir": 3, "instanti": [3, 9], "instead": [2, 8, 9, 10, 12, 14, 15], "int": [3, 4, 5, 6, 9, 10, 11, 13, 14, 15, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29], "int64": [2, 3, 4, 5], "integ": [2, 3, 4, 5, 6, 9, 12, 13, 16], "intend": 11, "intern": [4, 5], "interv": [2, 3, 4, 5, 6, 7], "introduc": [8, 10, 12, 15], "inverse_transform": [8, 9, 10, 11, 12, 13, 14, 15, 30], "issu": 30, "iter": [3, 9], "iterativeimput": 30, "j": 6, "jmlr": [3, 9, 11], "johnjreis": 6, "journal": [4, 5], "just": [2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15], "k": [7, 11], "kaggl": [4, 5], "kbinsdiscret": [4, 5, 7, 30], "kdd": [3, 9, 11], "ke": [4, 5], "kei": 2, "kept": 13, "keyword": 14, "keyword1": 14, "keyword2": 14, "kfold": [3, 9], "khgglozsrta": 12, "knnimput": 30, "knowledg": 14, "kotsianti": [4, 5], "k\u00e9gl": 14, "label": [3, 13], "larger": 6, "last": 11, "lead": 10, "lean": [4, 5], "learn": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 30], "lehr": [4, 5], "less": [10, 13, 15], "letter": 14, "librari": 0, "like": [14, 30], "limit": [2, 3, 4, 5, 6], "linear": 11, "list": [2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], "listendata": 15, "load": 0, "load__titan": 0, "log": 15, "london": 12, "lower": 13, "m": 14, "m_estim": 10, "machin": [12, 14], "magenta": 13, "mai": [5, 6], "major": 11, "make": [8, 9, 10, 11, 12, 13, 14, 15, 16], "mani": 11, "map": [8, 9, 10, 12, 15], "master": [4, 5], "match": 14, "max": [5, 6], "max_depth": [3, 9], "max_n_categori": 13, "maxabsscal": 30, "maximum": [6, 13], "me": 10, "mean": [7, 9, 10, 11, 12, 16], "meanencod": 16, "measur": 14, "mestimateencod": 10, "method": [2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 30], "metric": [3, 9], "micci": 10, "might": [6, 10], "min": [5, 6], "minimum": [6, 13], "minmaxscal": 30, "miss": [8, 10, 12, 13, 14], "missing_valu": [8, 10, 12, 13, 14], "mitig": 10, "mixtur": 10, "mizil": [3, 9, 11], "mlr": [3, 9, 11], "model": [3, 9, 11], "model_evalu": [3, 9], "modif": 10, "modifi": [28, 30], "modul": [3, 9], "moment": 0, "more": [3, 9], "most": [11, 13, 14], "mtome": 3, "multi": 16, "multiclass": [3, 9], "must": 15, "n": [6, 10, 11], "n_categori": 13, "n_featur": [2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30], "n_features_in_": [2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 30], "n_i": 10, "n_sampl": [2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30], "name": [2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], "nan": [2, 8, 9, 10, 12, 15], "narrow": 6, "need": [2, 4, 5, 6, 8, 11, 12, 14], "neg_mean_squared_error": [3, 9], "net": 6, "new": [11, 13, 14, 30], "newli": 30, "newslett": 10, "ni": 10, "niculescu": [3, 9, 11], "niculescu09": [3, 9, 11], "non": 30, "none": [2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 24, 30], "normal": 30, "note": [5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 25, 26, 30], "noth": 14, "now": 15, "np": [2, 3, 4, 5], "number": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 30], "numer": [2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 22, 24, 27, 30], "numpi": [2, 3, 4, 5], "object": [8, 9, 10, 11, 12, 13, 14, 15, 16, 20, 24, 25, 26], "observ": [4, 5, 6, 7, 8, 10, 11, 13, 14], "obtain": 30, "od": 12, "offer": [30, 31], "oh": 11, "one": [3, 9, 11, 14, 16, 24], "onehotencod": [14, 16, 30], "ones": [11, 14, 30], "onli": [2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 30, 31], "open": [8, 10, 12, 15, 16], "oper": [8, 9, 10, 11, 12, 13, 14, 15], "optimis": [3, 9], "option": [3, 8, 9, 10, 11, 12, 13, 14, 15, 16, 23, 30], "orang": [3, 9, 11], "order": [9, 12], "ordin": [9, 12, 30], "ordinalencod": [9, 16, 30], "org": [3, 6, 9, 10], "origin": [3, 8, 9, 10, 11, 12, 14, 15, 30], "other": [0, 3, 9, 13, 14, 30], "otherwis": 12, "our": 30, "out": 14, "output": [2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 30], "outsid": 2, "over": [3, 9], "overrid": [8, 9, 10, 11, 12, 13, 14, 15], "p": 14, "packag": [8, 10, 12, 15, 16], "pair": 2, "panda": [2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 19, 20, 21, 22, 24, 29, 30], "param_grid": [3, 9], "paramet": [2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30], "pars": [21, 23, 25, 26], "pass": [2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 30], "pd": [2, 3, 4, 5, 8, 9, 10, 11, 12, 13, 14, 15, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30], "pdf": [3, 4, 5, 9, 11], "per": [2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15], "percentag": [8, 13], "perform": [3, 8, 9, 10, 11, 12, 13, 14], "period": [19, 20, 21, 22, 23, 24, 25, 26, 27, 29], "permit": [3, 9], "php": 6, "pintela": [4, 5], "pipelin": 30, "pl": [2, 3, 4, 5, 8, 9, 10, 11, 12, 13, 14, 15, 23, 25, 26, 27, 29], "place": [11, 14, 15], "pleas": 30, "polar": [2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30], "polynomialfeatur": 30, "polynomialfeautur": 30, "poor": 10, "popular": [11, 14], "possibl": [3, 9, 15], "posterior": 10, "powertransform": 30, "pp": [4, 5], "precis": [3, 6, 9], "predefin": 7, "predict": [3, 7, 9, 10, 16], "preprocess": [4, 5, 10, 14, 30], "present": [8, 9, 10, 11, 12, 14, 15, 29, 30], "press": [3, 9, 11], "previou": [6, 10], "primarili": 15, "prior": 10, "problem": [3, 10], "procedur": [8, 10, 11, 12, 13, 15], "proceed": [3, 9, 11], "progress": 6, "properli": 6, "proport": [4, 5, 6], "provid": 13, "public": 3, "pydata": 12, "python": 0, "q": 4, "qcut": 4, "quantil": 4, "quantiletransform": 30, "quick_featur": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31], "quick_feature": [], "quickli": 0, "rais": [2, 8, 9, 10, 12, 13, 14, 15, 30], "randint": [2, 3, 4, 5], "randn": 3, "random": [2, 3, 4, 5], "random_st": [3, 9], "rang": [6, 14], "rare": [10, 13], "rarelabelencod": [8, 9, 10, 12, 15, 16], "recommend": [3, 9, 11, 14, 15], "red": 10, "redund": 11, "refer": [3, 4, 5, 6, 9, 10, 11, 12, 14], "regress": [3, 9, 16], "reiser": 6, "relat": 10, "reliabl": 10, "remain": 14, "remov": [11, 14], "replac": [3, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 30], "replace_with": 13, "repo": 30, "repres": [11, 16], "represent": [8, 9, 10, 12, 15, 30], "reproduc": [3, 9], "requir": [3, 9, 13], "respect": [3, 10], "rest": [11, 13], "restructuredtext": 17, "retain": [13, 28], "retain_variables_if_in_df": 28, "return": [2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], "return_boundari": [2, 4, 5, 6], "right": 6, "risk": [12, 15], "rle": 13, "robustscal": 30, "rreplac": 14, "same": [3, 4, 5, 9], "sampl": [3, 9, 10, 11, 12, 13, 14, 15], "scheme": 10, "scienc": [4, 5], "scikit": [3, 7, 9, 17, 30], "score": [3, 9], "scorecard": 15, "scores_dict_": 3, "search": [3, 9], "second": [6, 11, 24], "sector": 15, "see": [3, 8, 9, 10, 11, 12, 13, 14, 15, 17], "seed": [2, 3, 4, 5], "seen": [2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 30], "select": [3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 24, 26, 28, 30, 31], "selet": 11, "sens": 14, "separ": 11, "sequenc": 14, "seri": [3, 8, 9, 10, 11, 12, 14, 15, 30], "set": [2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 28, 30], "set_param": [2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 30], "sever": 6, "shape": [2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30], "share": 11, "short": [8, 9, 10, 11, 12, 13, 14, 15], "should": [2, 3, 4, 5, 6, 8, 9, 10, 12, 13, 14], "show": 11, "shuffl": [3, 9], "sigkdd": 10, "similar": [2, 7, 8, 12, 14, 15, 30, 31], "similarityencod": 14, "simpleimput": 30, "singl": [9, 16], "size": [5, 6, 7], "skew": 6, "sklearn": [3, 4, 5, 9, 30], "sklearntransformerwrapp": 31, "skw": 30, "slideshar": 6, "small": 6, "smooth": 10, "so": [3, 6, 9, 14], "some": 6, "sort": [2, 3, 4, 5, 6, 7], "sourc": [2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30], "spars": 30, "sparse_output": 30, "specif": 28, "specifi": [3, 9, 11, 14, 28], "split": [3, 9], "splitter": [3, 9], "springer": 14, "sse": 14, "stabl": [3, 9], "standardscal": 30, "start": 0, "store": [3, 9], "str": [3, 8, 9, 10, 12, 14, 19, 20, 21, 22, 23, 24, 25, 26, 27], "strategi": [3, 9], "stratifi": [3, 9], "stratifiedkfold": [3, 9], "string": [2, 8, 9, 10, 12, 13, 14, 15, 29], "stringsimilarityencod": 16, "stronger": 10, "studien": [4, 5], "subset": [14, 29, 31], "succeed": 6, "summari": [7, 16], "supervis": [4, 5], "support": [0, 30], "syntax": 17, "system": 6, "t": [10, 14, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29], "take": [3, 28], "talk": 12, "targ": 16, "target": [3, 9, 10, 11, 12, 14, 15, 30], "target_encod": 10, "targetencod": 10, "techniqu": 6, "term": [3, 9, 15], "test": [0, 3, 9], "text": 14, "than": [6, 13], "thei": [11, 14, 26, 28, 30, 31], "them": [3, 11, 13, 14], "themselv": 6, "thesi": [4, 5], "thi": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 26, 28, 30], "those": [8, 9, 10, 11, 12, 13, 14, 15, 30], "thu": [2, 6, 11, 15], "tol": 13, "toler": 13, "top": 11, "top_categori": [11, 14], "total": 14, "train": [2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 30], "transact": 14, "transform": [2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 28, 30, 31], "transformer_": 30, "tree": [3, 7, 9, 11, 16], "true": [2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16], "try": [8, 10, 12, 15], "tu": [4, 5], "tupe": 24, "tupl": 24, "two": 24, "type": [2, 3, 8, 9, 10, 11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30], "u": 0, "un": 10, "under": [13, 28], "union": [19, 20, 21, 22, 23, 24, 25, 26, 27], "uniqu": [11, 14], "unseen": [8, 9, 10, 12, 14, 15], "up": 3, "us": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 28, 30], "user": [2, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15], "utilis": 9, "v": 12, "v3": 3, "v7": [3, 9, 11], "valid": [3, 9], "valu": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 30], "value_count": [2, 3, 4, 5], "var1": 2, "var2": 2, "var_": [20, 22, 25, 27], "var_cat": [14, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29], "var_dat": [19, 20, 21, 22, 23, 24, 25, 26, 27, 29], "var_dig": 14, "var_dog": 14, "var_num": [19, 20, 21, 22, 23, 24, 25, 26, 27, 29], "var_oth": 29, "vari": [5, 6], "variabl": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31], "variable_handl": [19, 20, 21, 22, 23, 24, 25, 26, 27, 29], "variables_": [2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 30], "variables_binary_": 11, "variables_in_df": 29, "varianc": 10, "variancethreshold": 30, "varoquaux": 14, "vars_al": [19, 23], "vars_in_df": 29, "veri": 6, "verlag": 14, "version": 16, "visit": [15, 16], "vol": [4, 5], "w_i": 10, "wa": [3, 10, 11, 12, 15], "wai": [4, 5], "want": [8, 9, 10, 11, 12, 13, 14, 15], "warn": [2, 8, 9, 10, 12, 15], "watch": 12, "we": [0, 9, 11, 14], "weight": [10, 15, 16], "well": [8, 9, 10, 11, 12, 13, 14, 15, 26], "were": [6, 8, 10, 12, 14, 15], "what": [2, 8, 9, 10, 12, 15], "when": [2, 3, 6, 8, 9, 10, 11, 12, 13, 14, 15, 30], "where": [5, 10, 11, 13, 14], "whether": [2, 3, 4, 5, 6, 9, 11, 23], "which": [2, 3, 5, 7, 8, 9, 11, 14, 30], "while": 11, "whose": 3, "why": 0, "wi": 10, "width": [5, 6], "wiki": 6, "wikipedia": 6, "win": [3, 9, 11], "winner": 3, "wish": 3, "within": 10, "without": 10, "woe": 15, "woeencod": 16, "word": [3, 9, 14], "work": [2, 3, 4, 5, 6, 9], "workshop": [3, 9, 11], "would": [14, 30], "wrap": 31, "wrapper": [17, 30], "www": [3, 4, 5, 6, 12, 15], "x": [2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30], "x1": [8, 9, 10, 11, 12, 13, 14, 15, 30], "x1_a": 30, "x1_b": 30, "x1_c": 30, "x2": [8, 9, 10, 11, 12, 13, 14, 15, 30], "x2_a": 11, "x2_b": 11, "x2_c": 11, "x2_dagger": 14, "x2_dig": 14, "x2_dog": 14, "x2_hi": 14, "x3": 30, "x_new": [2, 3, 9, 11, 14, 15, 30], "x_tr": [10, 30], "y": [2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 30], "y_clf": 3, "y_reg": 3, "yield": [3, 9], "you": [0, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 30], "your": 17, "youtub": 12, "zero": [8, 15]}, "titles": ["Datasets", "load__titanic", "ArbitraryDiscretiser", "DecisionTreeDiscretiser", "EqualFrequencyDiscretiser", "EqualWidthDiscretiser", "GeometricWidthDiscretiser", "Discretisation", "CountFrequencyEncoder", "DecisionTreeEncoder", "MeanEncoder", "OneHotEncoder", "OrdinalEncoder", "RareLabelEncoder", "StringSimilarityEncoder", "WoEEncoder", "Categorical Encoding", "quick_feature documentation", "quick_feature", "check_all_variables", "check_categorical_variables", "check_datetime_variables", "check_numerical_variables", "find_all_variables", "find_categorical_and_numerical_variables", "find_categorical_variables", "find_datetime_variables", "find_numerical_variables", "Variable handling functions", "retain_variables_if_in_df", "SklearnTransformerWrapper", "Scikit-learn Wrapper"], "titleterms": {"addit": 7, "api": 17, "arbitrarydiscretis": 2, "categor": 16, "check_all_vari": 19, "check_categorical_vari": 20, "check_datetime_vari": 21, "check_numerical_vari": 22, "countfrequencyencod": 8, "dataset": [0, 17], "decisiontreediscretis": 3, "decisiontreeencod": 9, "discretis": 7, "document": 17, "encod": 16, "equalfrequencydiscretis": 4, "equalwidthdiscretis": 5, "fast_featur": [], "find_all_vari": 23, "find_categorical_and_numerical_vari": 24, "find_categorical_vari": 25, "find_datetime_vari": 26, "find_numerical_vari": 27, "function": 28, "geometricwidthdiscretis": 6, "handl": 28, "learn": 31, "librari": 16, "load__titan": 1, "meanencod": 10, "onehotencod": 11, "ordinalencod": 12, "other": [16, 17, 31], "quick_featur": [17, 18], "quick_feature": [], "rarelabelencod": 13, "retain_variables_if_in_df": 29, "scikit": 31, "sklearntransformerwrapp": 30, "stringsimilarityencod": 14, "tool": 17, "transform": [7, 17], "variabl": 28, "woeencod": 15, "wrapper": 31}})